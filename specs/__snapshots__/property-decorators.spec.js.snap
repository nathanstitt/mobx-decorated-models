// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Property Decorators can set property to be object 1`] = `
Object {
  "container": undefined,
  "depth": 1,
  "height": 1,
  "id": undefined,
  "metadata": Object {
    "barcode": "Z12",
    "color": "black",
    Symbol(mobx administration): ObservableObjectAdministration$$1 {
      "defaultEnhancer": [Function],
      "keysAtom": Atom$$1 {
        "diffValue": 0,
        "isBeingObserved": false,
        "isPendingUnobservation": false,
        "lastAccessedBy": 0,
        "lowestObserverState": 2,
        "name": "Box@81.metadata.keys",
        "observers": Set {},
      },
      "name": "Box@81.metadata",
      "pendingKeys": Map {
        "asymmetricMatch" => false,
        "nodeType" => false,
        "$$typeof" => false,
        "@@__IMMUTABLE_ITERABLE__@@" => false,
        "@@__IMMUTABLE_RECORD__@@" => false,
        "_isMockFunction" => false,
        "toJSON" => false,
      },
      "proxy": [Circular],
      "target": Object {
        "barcode": "Z12",
        "color": "black",
        Symbol(mobx administration): [Circular],
      },
      "values": Map {
        "barcode" => "Z12",
        "color" => "black",
      },
    },
  },
  "sides": Array [],
  "vessel": undefined,
  "watercraft": undefined,
  "width": 3,
}
`;

exports[`Property Decorators session props are set but not serialized 1`] = `
Object {
  "container": undefined,
  "depth": 1,
  "height": 1,
  "id": undefined,
  "metadata": Object {
    Symbol(mobx administration): ObservableObjectAdministration$$1 {
      "defaultEnhancer": [Function],
      "keysAtom": Atom$$1 {
        "diffValue": 0,
        "isBeingObserved": false,
        "isPendingUnobservation": false,
        "lastAccessedBy": 0,
        "lowestObserverState": -1,
        "name": "ObservableObject@63.keys",
        "observers": Set {},
      },
      "name": "ObservableObject@63",
      "pendingKeys": Map {
        "$$typeof" => false,
        "nodeType" => false,
        "@@__IMMUTABLE_ITERABLE__@@" => false,
        "@@__IMMUTABLE_RECORD__@@" => false,
        "_isMockFunction" => false,
        "toJSON" => false,
      },
      "proxy": [Circular],
      "target": Object {
        Symbol(mobx administration): [Circular],
      },
      "values": Map {},
    },
  },
  "sides": Array [],
  "vessel": undefined,
  "watercraft": undefined,
  "width": 3,
}
`;

exports[`Property Decorators sets an inverse for belongsTo 1`] = `
Object {
  "box": Object {
    "container": undefined,
    "depth": 1,
    "height": 1,
    "id": undefined,
    "metadata": Object {
      Symbol(mobx administration): ObservableObjectAdministration$$1 {
        "defaultEnhancer": [Function],
        "keysAtom": Atom$$1 {
          "diffValue": 0,
          "isBeingObserved": false,
          "isPendingUnobservation": false,
          "lastAccessedBy": 0,
          "lowestObserverState": -1,
          "name": "ObservableObject@59.keys",
          "observers": Set {},
        },
        "name": "ObservableObject@59",
        "pendingKeys": Map {
          "$$typeof" => false,
          "nodeType" => false,
          "@@__IMMUTABLE_ITERABLE__@@" => false,
          "@@__IMMUTABLE_RECORD__@@" => false,
          "_isMockFunction" => false,
          "toJSON" => false,
        },
        "proxy": [Circular],
        "target": Object {
          Symbol(mobx administration): [Circular],
        },
        "values": Map {},
      },
    },
    "sides": Array [],
    "watercraft": undefined,
    "width": 42,
  },
  "cargoCount": undefined,
  "embarks": null,
  "homePorts": Array [],
  "name": "HMS Mobx",
  "radio": null,
  "registration": "",
}
`;
